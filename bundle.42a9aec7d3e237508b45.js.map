{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/d3/dist/package.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/pairs.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/descending.js","webpack:///./node_modules/d3-array/src/number.js","webpack:///./node_modules/d3-array/src/variance.js","webpack:///./node_modules/d3-array/src/deviation.js","webpack:///./node_modules/d3-array/src/extent.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/constant.js","webpack:///./node_modules/d3-array/src/identity.js","webpack:///./node_modules/d3-array/src/range.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/histogram.js","webpack:///./node_modules/d3-array/src/quantile.js","webpack:///./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack:///./node_modules/d3-array/src/threshold/scott.js","webpack:///./node_modules/d3-array/src/max.js","webpack:///./node_modules/d3-array/src/mean.js","webpack:///./node_modules/d3-array/src/median.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/min.js","webpack:///./node_modules/d3-array/src/permute.js","webpack:///./node_modules/d3-array/src/scan.js","webpack:///./node_modules/d3-array/src/shuffle.js","webpack:///./node_modules/d3-array/src/sum.js","webpack:///./node_modules/d3-array/src/transpose.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-axis/src/array.js","webpack:///./node_modules/d3-axis/src/identity.js","webpack:///./node_modules/d3-axis/src/axis.js","webpack:///./node_modules/d3-dispatch/src/dispatch.js","webpack:///./node_modules/d3-selection/src/namespaces.js","webpack:///./node_modules/d3-selection/src/namespace.js","webpack:///./node_modules/d3-selection/src/creator.js","webpack:///./node_modules/d3-selection/src/selector.js","webpack:///./node_modules/d3-selection/src/selectorAll.js","webpack:///./node_modules/d3-selection/src/matcher.js","webpack:///./node_modules/d3-selection/src/selection/sparse.js","webpack:///./node_modules/d3-selection/src/selection/enter.js","webpack:///./node_modules/d3-selection/src/constant.js","webpack:///./node_modules/d3-selection/src/selection/data.js","webpack:///./node_modules/d3-selection/src/selection/sort.js","webpack:///./node_modules/d3-selection/src/selection/attr.js","webpack:///./node_modules/d3-selection/src/window.js","webpack:///./node_modules/d3-selection/src/selection/style.js","webpack:///./node_modules/d3-selection/src/selection/classed.js","webpack:///./node_modules/d3-selection/src/selection/text.js","webpack:///./node_modules/d3-selection/src/selection/html.js","webpack:///./node_modules/d3-selection/src/selection/raise.js","webpack:///./node_modules/d3-selection/src/selection/lower.js","webpack:///./node_modules/d3-selection/src/selection/insert.js","webpack:///./node_modules/d3-selection/src/selection/remove.js","webpack:///./node_modules/d3-selection/src/selection/clone.js","webpack:///./node_modules/d3-selection/src/selection/on.js","webpack:///./node_modules/d3-selection/src/selection/dispatch.js","webpack:///./node_modules/d3-selection/src/selection/index.js","webpack:///./node_modules/d3-selection/src/selection/select.js","webpack:///./node_modules/d3-selection/src/selection/selectAll.js","webpack:///./node_modules/d3-selection/src/selection/filter.js","webpack:///./node_modules/d3-selection/src/selection/exit.js","webpack:///./node_modules/d3-selection/src/selection/join.js","webpack:///./node_modules/d3-selection/src/selection/merge.js","webpack:///./node_modules/d3-selection/src/selection/order.js","webpack:///./node_modules/d3-selection/src/selection/call.js","webpack:///./node_modules/d3-selection/src/selection/nodes.js","webpack:///./node_modules/d3-selection/src/selection/node.js","webpack:///./node_modules/d3-selection/src/selection/size.js","webpack:///./node_modules/d3-selection/src/selection/empty.js","webpack:///./node_modules/d3-selection/src/selection/each.js","webpack:///./node_modules/d3-selection/src/selection/property.js","webpack:///./node_modules/d3-selection/src/selection/append.js","webpack:///./node_modules/d3-selection/src/selection/datum.js","webpack:///./node_modules/d3-selection/src/select.js","webpack:///./node_modules/d3-selection/src/create.js","webpack:///./node_modules/d3-selection/src/local.js","webpack:///./node_modules/d3-selection/src/sourceEvent.js","webpack:///./node_modules/d3-selection/src/point.js","webpack:///./node_modules/d3-selection/src/mouse.js","webpack:///./node_modules/d3-selection/src/selectAll.js","webpack:///./node_modules/d3-selection/src/touch.js","webpack:///./node_modules/d3-selection/src/touches.js","webpack:///./node_modules/d3-drag/src/noevent.js","webpack:///./node_modules/d3-drag/src/nodrag.js","webpack:///./node_modules/d3-drag/src/constant.js","webpack:///./node_modules/d3-drag/src/event.js","webpack:///./node_modules/d3-drag/src/drag.js","webpack:///./node_modules/d3-color/src/define.js","webpack:///./node_modules/d3-color/src/color.js","webpack:///./node_modules/d3-color/src/math.js","webpack:///./node_modules/d3-color/src/lab.js","webpack:///./node_modules/d3-color/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/basis.js","webpack:///./node_modules/d3-interpolate/src/basisClosed.js","webpack:///./node_modules/d3-interpolate/src/constant.js","webpack:///./node_modules/d3-interpolate/src/color.js","webpack:///./node_modules/d3-interpolate/src/rgb.js","webpack:///./node_modules/d3-interpolate/src/array.js","webpack:///./node_modules/d3-interpolate/src/date.js","webpack:///./node_modules/d3-interpolate/src/number.js","webpack:///./node_modules/d3-interpolate/src/object.js","webpack:///./node_modules/d3-interpolate/src/string.js","webpack:///./node_modules/d3-interpolate/src/transform/parse.js","webpack:///./node_modules/d3-interpolate/src/value.js","webpack:///./node_modules/d3-interpolate/src/discrete.js","webpack:///./node_modules/d3-interpolate/src/hue.js","webpack:///./node_modules/d3-interpolate/src/round.js","webpack:///./node_modules/d3-interpolate/src/transform/decompose.js","webpack:///./node_modules/d3-interpolate/src/transform/index.js","webpack:///./node_modules/d3-interpolate/src/zoom.js","webpack:///./node_modules/d3-interpolate/src/hsl.js","webpack:///./node_modules/d3-interpolate/src/lab.js","webpack:///./node_modules/d3-interpolate/src/hcl.js","webpack:///./node_modules/d3-interpolate/src/cubehelix.js","webpack:///./node_modules/d3-interpolate/src/piecewise.js","webpack:///./node_modules/d3-interpolate/src/quantize.js","webpack:///./node_modules/d3-timer/src/timer.js","webpack:///./node_modules/d3-timer/src/timeout.js","webpack:///./node_modules/d3-timer/src/interval.js","webpack:///./node_modules/d3-transition/src/transition/schedule.js","webpack:///./node_modules/d3-transition/src/interrupt.js","webpack:///./node_modules/d3-transition/src/transition/tween.js","webpack:///./node_modules/d3-transition/src/transition/interpolate.js","webpack:///./node_modules/d3-transition/src/transition/remove.js","webpack:///./node_modules/d3-transition/src/transition/selection.js","webpack:///./node_modules/d3-transition/src/transition/style.js","webpack:///./node_modules/d3-transition/src/transition/text.js","webpack:///./node_modules/d3-transition/src/transition/index.js","webpack:///./node_modules/d3-ease/src/linear.js","webpack:///./node_modules/d3-ease/src/quad.js","webpack:///./node_modules/d3-ease/src/cubic.js","webpack:///./node_modules/d3-transition/src/transition/select.js","webpack:///./node_modules/d3-transition/src/transition/selectAll.js","webpack:///./node_modules/d3-transition/src/transition/filter.js","webpack:///./node_modules/d3-transition/src/transition/merge.js","webpack:///./node_modules/d3-transition/src/transition/transition.js","webpack:///./node_modules/d3-transition/src/transition/on.js","webpack:///./node_modules/d3-transition/src/transition/attr.js","webpack:///./node_modules/d3-transition/src/transition/attrTween.js","webpack:///./node_modules/d3-transition/src/transition/styleTween.js","webpack:///./node_modules/d3-transition/src/transition/delay.js","webpack:///./node_modules/d3-transition/src/transition/duration.js","webpack:///./node_modules/d3-transition/src/transition/ease.js","webpack:///./node_modules/d3-transition/src/transition/end.js","webpack:///./node_modules/d3-ease/src/poly.js","webpack:///./node_modules/d3-ease/src/sin.js","webpack:///./node_modules/d3-ease/src/exp.js","webpack:///./node_modules/d3-ease/src/circle.js","webpack:///./node_modules/d3-ease/src/bounce.js","webpack:///./node_modules/d3-ease/src/back.js","webpack:///./node_modules/d3-ease/src/elastic.js","webpack:///./node_modules/d3-transition/src/selection/transition.js","webpack:///./node_modules/d3-transition/src/selection/index.js","webpack:///./node_modules/d3-transition/src/selection/interrupt.js","webpack:///./node_modules/d3-transition/src/active.js","webpack:///./node_modules/d3-brush/src/constant.js","webpack:///./node_modules/d3-brush/src/event.js","webpack:///./node_modules/d3-brush/src/noevent.js","webpack:///./node_modules/d3-brush/src/brush.js","webpack:///./node_modules/d3-chord/src/math.js","webpack:///./node_modules/d3-chord/src/chord.js","webpack:///./node_modules/d3-chord/src/array.js","webpack:///./node_modules/d3-chord/src/constant.js","webpack:///./node_modules/d3-path/src/path.js","webpack:///./node_modules/d3-chord/src/ribbon.js","webpack:///./node_modules/d3-collection/src/map.js","webpack:///./node_modules/d3-collection/src/nest.js","webpack:///./node_modules/d3-collection/src/set.js","webpack:///./node_modules/d3-collection/src/keys.js","webpack:///./node_modules/d3-collection/src/values.js","webpack:///./node_modules/d3-collection/src/entries.js","webpack:///./node_modules/d3-contour/src/array.js","webpack:///./node_modules/d3-contour/src/ascending.js","webpack:///./node_modules/d3-contour/src/area.js","webpack:///./node_modules/d3-contour/src/constant.js","webpack:///./node_modules/d3-contour/src/contains.js","webpack:///./node_modules/d3-contour/src/noop.js","webpack:///./node_modules/d3-contour/src/contours.js","webpack:///./node_modules/d3-contour/src/blur.js","webpack:///./node_modules/d3-contour/src/density.js","webpack:///./node_modules/d3-dsv/src/dsv.js","webpack:///./node_modules/d3-dsv/src/csv.js","webpack:///./node_modules/d3-dsv/src/tsv.js","webpack:///./node_modules/d3-dsv/src/autoType.js","webpack:///./node_modules/d3-fetch/src/blob.js","webpack:///./node_modules/d3-fetch/src/buffer.js","webpack:///./node_modules/d3-fetch/src/text.js","webpack:///./node_modules/d3-fetch/src/dsv.js","webpack:///./node_modules/d3-fetch/src/image.js","webpack:///./node_modules/d3-fetch/src/json.js","webpack:///./node_modules/d3-fetch/src/xml.js","webpack:///./node_modules/d3-force/src/center.js","webpack:///./node_modules/d3-force/src/constant.js","webpack:///./node_modules/d3-force/src/jiggle.js","webpack:///./node_modules/d3-quadtree/src/add.js","webpack:///./node_modules/d3-quadtree/src/cover.js","webpack:///./node_modules/d3-quadtree/src/quad.js","webpack:///./node_modules/d3-quadtree/src/x.js","webpack:///./node_modules/d3-quadtree/src/y.js","webpack:///./node_modules/d3-quadtree/src/quadtree.js","webpack:///./node_modules/d3-force/src/collide.js","webpack:///./node_modules/d3-quadtree/src/data.js","webpack:///./node_modules/d3-quadtree/src/extent.js","webpack:///./node_modules/d3-quadtree/src/find.js","webpack:///./node_modules/d3-quadtree/src/remove.js","webpack:///./node_modules/d3-quadtree/src/root.js","webpack:///./node_modules/d3-quadtree/src/size.js","webpack:///./node_modules/d3-quadtree/src/visit.js","webpack:///./node_modules/d3-quadtree/src/visitAfter.js","webpack:///./node_modules/d3-force/src/link.js","webpack:///./node_modules/d3-force/src/simulation.js","webpack:///./node_modules/d3-force/src/manyBody.js","webpack:///./node_modules/d3-force/src/radial.js","webpack:///./node_modules/d3-force/src/x.js","webpack:///./node_modules/d3-force/src/y.js","webpack:///./node_modules/d3-format/src/formatDecimal.js","webpack:///./node_modules/d3-format/src/exponent.js","webpack:///./node_modules/d3-format/src/formatSpecifier.js","webpack:///./node_modules/d3-format/src/formatTrim.js","webpack:///./node_modules/d3-format/src/formatPrefixAuto.js","webpack:///./node_modules/d3-format/src/defaultLocale.js","webpack:///./node_modules/d3-format/src/formatRounded.js","webpack:///./node_modules/d3-format/src/formatTypes.js","webpack:///./node_modules/d3-format/src/identity.js","webpack:///./node_modules/d3-format/src/locale.js","webpack:///./node_modules/d3-format/src/formatGroup.js","webpack:///./node_modules/d3-format/src/formatNumerals.js","webpack:///./node_modules/d3-format/src/precisionFixed.js","webpack:///./node_modules/d3-format/src/precisionPrefix.js","webpack:///./node_modules/d3-format/src/precisionRound.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/area.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/bounds.js","webpack:///./node_modules/d3-geo/src/centroid.js","webpack:///./node_modules/d3-geo/src/constant.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/clip/extent.js","webpack:///./node_modules/d3-geo/src/length.js","webpack:///./node_modules/d3-geo/src/distance.js","webpack:///./node_modules/d3-geo/src/contains.js","webpack:///./node_modules/d3-geo/src/graticule.js","webpack:///./node_modules/d3-geo/src/interpolate.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/path/centroid.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/conic.js","webpack:///./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/albers.js","webpack:///./node_modules/d3-geo/src/projection/albersUsa.js","webpack:///./node_modules/d3-geo/src/projection/azimuthal.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack:///./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/projection/conicConformal.js","webpack:///./node_modules/d3-geo/src/projection/equirectangular.js","webpack:///./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack:///./node_modules/d3-geo/src/projection/equalEarth.js","webpack:///./node_modules/d3-geo/src/projection/gnomonic.js","webpack:///./node_modules/d3-geo/src/projection/identity.js","webpack:///./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack:///./node_modules/d3-geo/src/projection/orthographic.js","webpack:///./node_modules/d3-geo/src/projection/stereographic.js","webpack:///./node_modules/d3-geo/src/projection/transverseMercator.js","webpack:///./node_modules/d3-hierarchy/src/cluster.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack:///./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack:///./node_modules/d3-hierarchy/src/array.js","webpack:///./node_modules/d3-hierarchy/src/pack/enclose.js","webpack:///./node_modules/d3-hierarchy/src/pack/siblings.js","webpack:///./node_modules/d3-hierarchy/src/accessors.js","webpack:///./node_modules/d3-hierarchy/src/constant.js","webpack:///./node_modules/d3-hierarchy/src/pack/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/round.js","webpack:///./node_modules/d3-hierarchy/src/treemap/dice.js","webpack:///./node_modules/d3-hierarchy/src/partition.js","webpack:///./node_modules/d3-hierarchy/src/stratify.js","webpack:///./node_modules/d3-hierarchy/src/tree.js","webpack:///./node_modules/d3-hierarchy/src/treemap/slice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack:///./node_modules/d3-hierarchy/src/treemap/index.js","webpack:///./node_modules/d3-hierarchy/src/treemap/binary.js","webpack:///./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack:///./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack:///./node_modules/d3-polygon/src/area.js","webpack:///./node_modules/d3-polygon/src/centroid.js","webpack:///./node_modules/d3-polygon/src/cross.js","webpack:///./node_modules/d3-polygon/src/hull.js","webpack:///./node_modules/d3-polygon/src/contains.js","webpack:///./node_modules/d3-polygon/src/length.js","webpack:///./node_modules/d3-random/src/defaultSource.js","webpack:///./node_modules/d3-random/src/uniform.js","webpack:///./node_modules/d3-random/src/normal.js","webpack:///./node_modules/d3-random/src/logNormal.js","webpack:///./node_modules/d3-random/src/irwinHall.js","webpack:///./node_modules/d3-random/src/bates.js","webpack:///./node_modules/d3-random/src/exponential.js","webpack:///./node_modules/d3-scale/src/init.js","webpack:///./node_modules/d3-scale/src/array.js","webpack:///./node_modules/d3-scale/src/ordinal.js","webpack:///./node_modules/d3-scale/src/band.js","webpack:///./node_modules/d3-scale/src/constant.js","webpack:///./node_modules/d3-scale/src/number.js","webpack:///./node_modules/d3-scale/src/continuous.js","webpack:///./node_modules/d3-scale/src/tickFormat.js","webpack:///./node_modules/d3-scale/src/linear.js","webpack:///./node_modules/d3-scale/src/identity.js","webpack:///./node_modules/d3-scale/src/nice.js","webpack:///./node_modules/d3-scale/src/log.js","webpack:///./node_modules/d3-scale/src/symlog.js","webpack:///./node_modules/d3-scale/src/pow.js","webpack:///./node_modules/d3-scale/src/quantile.js","webpack:///./node_modules/d3-scale/src/quantize.js","webpack:///./node_modules/d3-scale/src/threshold.js","webpack:///./node_modules/d3-time/src/interval.js","webpack:///./node_modules/d3-time/src/millisecond.js","webpack:///./node_modules/d3-time/src/duration.js","webpack:///./node_modules/d3-time/src/second.js","webpack:///./node_modules/d3-time/src/minute.js","webpack:///./node_modules/d3-time/src/hour.js","webpack:///./node_modules/d3-time/src/day.js","webpack:///./node_modules/d3-time/src/week.js","webpack:///./node_modules/d3-time/src/month.js","webpack:///./node_modules/d3-time/src/year.js","webpack:///./node_modules/d3-time/src/utcMinute.js","webpack:///./node_modules/d3-time/src/utcHour.js","webpack:///./node_modules/d3-time/src/utcDay.js","webpack:///./node_modules/d3-time/src/utcWeek.js","webpack:///./node_modules/d3-time/src/utcMonth.js","webpack:///./node_modules/d3-time/src/utcYear.js","webpack:///./node_modules/d3-time-format/src/locale.js","webpack:///./node_modules/d3-time-format/src/defaultLocale.js","webpack:///./node_modules/d3-time-format/src/isoFormat.js","webpack:///./node_modules/d3-time-format/src/isoParse.js","webpack:///./node_modules/d3-scale/src/time.js","webpack:///./node_modules/d3-scale/src/utcTime.js","webpack:///./node_modules/d3-scale/src/sequential.js","webpack:///./node_modules/d3-scale/src/sequentialQuantile.js","webpack:///./node_modules/d3-scale/src/diverging.js","webpack:///./node_modules/d3-scale-chromatic/src/colors.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack:///./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack:///./node_modules/d3-scale-chromatic/src/ramp.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack:///./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack:///./node_modules/d3-shape/src/constant.js","webpack:///./node_modules/d3-shape/src/math.js","webpack:///./node_modules/d3-shape/src/arc.js","webpack:///./node_modules/d3-shape/src/curve/linear.js","webpack:///./node_modules/d3-shape/src/point.js","webpack:///./node_modules/d3-shape/src/line.js","webpack:///./node_modules/d3-shape/src/area.js","webpack:///./node_modules/d3-shape/src/descending.js","webpack:///./node_modules/d3-shape/src/identity.js","webpack:///./node_modules/d3-shape/src/pie.js","webpack:///./node_modules/d3-shape/src/curve/radial.js","webpack:///./node_modules/d3-shape/src/lineRadial.js","webpack:///./node_modules/d3-shape/src/areaRadial.js","webpack:///./node_modules/d3-shape/src/pointRadial.js","webpack:///./node_modules/d3-shape/src/array.js","webpack:///./node_modules/d3-shape/src/link/index.js","webpack:///./node_modules/d3-shape/src/symbol/circle.js","webpack:///./node_modules/d3-shape/src/symbol/cross.js","webpack:///./node_modules/d3-shape/src/symbol/diamond.js","webpack:///./node_modules/d3-shape/src/symbol/star.js","webpack:///./node_modules/d3-shape/src/symbol/square.js","webpack:///./node_modules/d3-shape/src/symbol/triangle.js","webpack:///./node_modules/d3-shape/src/symbol/wye.js","webpack:///./node_modules/d3-shape/src/symbol.js","webpack:///./node_modules/d3-shape/src/noop.js","webpack:///./node_modules/d3-shape/src/curve/basis.js","webpack:///./node_modules/d3-shape/src/curve/basisClosed.js","webpack:///./node_modules/d3-shape/src/curve/basisOpen.js","webpack:///./node_modules/d3-shape/src/curve/bundle.js","webpack:///./node_modules/d3-shape/src/curve/cardinal.js","webpack:///./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack:///./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack:///./node_modules/d3-shape/src/curve/catmullRom.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack:///./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack:///./node_modules/d3-shape/src/curve/linearClosed.js","webpack:///./node_modules/d3-shape/src/curve/monotone.js","webpack:///./node_modules/d3-shape/src/curve/natural.js","webpack:///./node_modules/d3-shape/src/curve/step.js","webpack:///./node_modules/d3-shape/src/offset/none.js","webpack:///./node_modules/d3-shape/src/order/none.js","webpack:///./node_modules/d3-shape/src/stack.js","webpack:///./node_modules/d3-shape/src/offset/expand.js","webpack:///./node_modules/d3-shape/src/offset/diverging.js","webpack:///./node_modules/d3-shape/src/offset/silhouette.js","webpack:///./node_modules/d3-shape/src/offset/wiggle.js","webpack:///./node_modules/d3-shape/src/order/appearance.js","webpack:///./node_modules/d3-shape/src/order/ascending.js","webpack:///./node_modules/d3-shape/src/order/descending.js","webpack:///./node_modules/d3-shape/src/order/insideOut.js","webpack:///./node_modules/d3-shape/src/order/reverse.js","webpack:///./node_modules/d3-voronoi/src/constant.js","webpack:///./node_modules/d3-voronoi/src/point.js","webpack:///./node_modules/d3-voronoi/src/RedBlackTree.js","webpack:///./node_modules/d3-voronoi/src/Edge.js","webpack:///./node_modules/d3-voronoi/src/Cell.js","webpack:///./node_modules/d3-voronoi/src/Circle.js","webpack:///./node_modules/d3-voronoi/src/Beach.js","webpack:///./node_modules/d3-voronoi/src/Diagram.js","webpack:///./node_modules/d3-voronoi/src/voronoi.js","webpack:///./node_modules/d3-zoom/src/constant.js","webpack:///./node_modules/d3-zoom/src/event.js","webpack:///./node_modules/d3-zoom/src/transform.js","webpack:///./node_modules/d3-zoom/src/noevent.js","webpack:///./node_modules/d3-zoom/src/zoom.js","webpack:///./node_modules/d3/index.js","webpack:///./app.ts","webpack:///./game.ts","webpack:///./app.css?3cba","webpack:///./app.css","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./node_modules/style-loader/lib/addStyles.js","webpack:///./node_modules/style-loader/lib/urls.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ascending","a","b","NaN","bisector","compare","f","length","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","Array","cross","values0","values1","reduce","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","v","Math","sqrt","src_extent","min","max","array_array","slice","map","constant","identity","src_range","start","stop","step","arguments","ceil","range","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","sturges","LN2","src_histogram","domain","threshold","histogram","data","xz","x0","x1","tz","isArray","shift","pop","bin","bins","push","_","thresholds","quantile","freedmanDiaconis","sort","scott","src_max","src_mean","median","numbers","src_merge","arrays","merged","j","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","y","entering","this","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","axis","context","apply","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","transition","getAttribute","parentNode","remove","filter","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","noop","dispatch","Error","Dispatch","type","set","callback","concat","constructor","on","typename","types","T","trim","split","indexOf","that","args","src_dispatch","xhtml","namespaces","svg","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","document","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","querySelector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","appendChild","child","insertBefore","next","keyPrefix","bindIndex","group","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","style","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","remove_remove","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","match","size","enterGroup","updateGroup","previous","_enter","_exit","onenter","onupdate","onexit","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","before","clone","deep","typenames","on_parseTypenames","src_selection","src_select","src_create","nextId","Local","toString","id","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","root","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","d3_drag_src_constant","DragEvent","target","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","sublisteners","p0","clickDistance","define","factory","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","src_basis","basisClosed","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","src_rgb","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","src_array","nb","na","src_value","src_date","Date","setTime","src_number","src_object","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","valueOf","discrete","src_hue","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","e","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","zoom_cosh","exp","src_zoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","zoom_sinh","duration","hsl_hsl","hue","src_hsl","hslLong","lab_lab","hcl_hcl","src_hcl","hclLong","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","src_cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","taskHead","taskTail","quantize","interpolator","samples","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","t0","Infinity","sleep","nap","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenValue","_id","transition_interpolate","selection_Selection","style_styleRemove","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","children","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","string00","string10","interpolate0","string0","string1","value1","_value","attrInterpolateNS","attrInterpolate","styleTween","styleNull","style_styleFunction","listener0","undefined","styleMaybeRemove","style_styleConstant","styleInterpolate","text_textFunction","text_textConstant","tween0","tween1","easeConstant","Promise","resolve","reject","cancel","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","transition_inherit","active_root","src_active","d3_brush_src_constant","src_event","noevent_nopropagation","src_noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","brush_X","handles","brush_type","input","output","xy","brush_Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","brush_defaultFilter","defaultExtent","width","height","brush_local","__brush","brush_empty","extent","brushSelection","dim","brushX","brush_brush","brushY","src_brush","brush","handleSize","initialize","handle","redraw","started","emitter","Emitter","e0","e1","s0","s1","moving","lockX","lockY","metaKey","altKey","signX","signY","W","N","E","shifting","shiftKey","point0","emit","moved","ended","keyCode","move","point1","selection0","selection1","starting","math_pi","math_halfPi","math_tau","math_max","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","forEach","di","dj","a0","a1","subindex","startAngle","endAngle","src_array_slice","d3_chord_src_constant","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","src_path","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","map_map","has","clear","keys","entries","src_map","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","Set","proto","set_set","src_set","src_keys","src_values","src_entries","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","yi","pj","yj","segmentContains","collinear","src_noop","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","polygon","coordinates","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","src_density","weight","density","Float32Array","wi","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","inferColumns","rows","columnSet","column","pad","formatDate","date","year","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","eof","eol","token","replace","preformatBody","formatValue","formatRow","test","convert","customConverter","formatBody","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","autoType","responseBlob","response","ok","status","statusText","blob","init","fetch","then","responseArrayBuffer","arrayBuffer","src_buffer","responseText","src_text","dsvParse","dsv_dsv","dsv_csv","dsv_tsv","src_image","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","xml_html","src_center","force","sx","sy","d3_force_src_constant","jiggle","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","collide_x","vx","collide_y","vy","cover","yz","visit","find","x3","y3","quads","retainer","removeAll","visitAfter","collide","radii","strength","iterations","ri","ri2","prepare","quad","rj","link_index","link_find","nodeById","nodeId","src_link","links","strengths","distances","bias","link","distance","alpha","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","manyBody","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","theta","radial","radiuses","d3_force_src_x","d3_force_src_y","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","prefixes","src_locale","locale","grouping","thousands","substring","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","haversin","noop_noop","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","d3_geo_src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","bounds_range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","normal","inflection","phii","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","deltaMax","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","src_centroid","d3_geo_src_constant","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","src_circle","center","circle","clip_buffer","lines","rejoin","pointEqual","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","clip_antimeridian","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","src_contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","Y","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","cy1","sy1","kx0","ky0","kx1","ky1","B","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","_circle","d3_geo_src_path","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","postclip","recenter","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","equalEarth","gnomonicRaw","gnomonic","identity_scaleTranslate","kx","ky","tx","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","meanX","maxY","leafLeft","leafRight","count_count","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","d3_hierarchy_src_array_slice","enclose","circles","array_shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r2","r21","r3","a2","a3","c3","d3","place","intersects","score","siblings_Node","packEnclose","aa","sj","sk","pack","siblings","required","constantZero","d3_hierarchy_src_constant","pack_defaultRadius","src_pack","radiusLeaf","packChildren","translateChild","treemap_round","dice","src_partition","partition","positionNode","stratify_keyPrefix","preroot","ambiguous","defaultId","defaultParentId","parentId","src_stratify","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","src_tree","treeRoot","firstWalk","secondWalk","sizeNode","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","d3_polygon_src_area","d3_polygon_src_centroid","src_cross","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","d3_polygon_src_contains","inside","d3_polygon_src_length","perimeter","src_defaultSource","uniform","sourceRandomUniform","randomUniform","src_normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","src_exponential","sourceRandomExponential","randomExponential","initRange","initInterpolator","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","band_point","pointish","d3_scale_src_constant","d3_scale_src_number","unit","continuous_identity","normalize","clamper","bimap","d0","polymap","clamp","continuous_transformer","untransform","piecewise","continuous","src_tickFormat","linearish","nice","src_linear_linear","identity_identity","interval","transformLog","transformExp","transformLogn","transformExpn","pow10","reflect","loggish","logs","pows","base","log10","log2","logp","powp","log_log","transformSymlog","log1p","transformSymexp","expm1","symlogish","symlog","transformPow","transformSqrt","transformSquare","powish","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","millisecond_millisecond","src_millisecond","durationMinute","durationWeek","second_second","getMilliseconds","src_second","minute_minute","getSeconds","getMinutes","src_minute","hour_hour","getHours","src_hour","day_day","setHours","setDate","getDate","getTimezoneOffset","src_day","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month_month","setMonth","getMonth","getFullYear","src_month","months","year_year","setFullYear","src_year","years","utcMinute","setUTCSeconds","src_utcMinute","utcMinutes","utcHour","setUTCMinutes","src_utcHour","utcHours","utcDay","setUTCHours","setUTCDate","src_utcDay","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","src_utcMonth","utcMonths","utcYear","setUTCFullYear","src_utcYear","utcYears","localDate","H","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pads","charAt","newParse","newDate","week","day","utcFormat","utcParse","src_defaultLocale_locale","timeFormat","timeParse","-","0","numberRe","percentRe","requoteRe","locale_pad","requote","dow","defaultLocale_defaultLocale","isoFormat","toISOString","isoParse","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_time","utcTime","sequential_transformer","k10","sequential_copy","sequential","sequentialLog","sequentialSymlog","sequentialPow","sequentialSqrt","sequentialQuantile","diverging_transformer","k21","diverging","divergingLog","divergingSymlog","divergingPow","divergingSqrt","src_colors","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","viridis_ramp","viridis","magma","inferno","plasma","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","D","cx0","cx1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","arc_intersect","bx","by","kc","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","src_line","defined","curve","defined0","d3_shape_src_area","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","src_pie","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","areaRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","d3_shape_src_array_slice","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","d3_shape_src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","monotone_sign","slope3","h0","h1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","px","py","natural","Step","_t","curve_step","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","expand","offset_diverging","yn","silhouette","wiggle","s2","sij0","s3","appearance","peaks","peak","vi","vj","order_ascending","ascending_sum","order_descending","insideOut","tops","bottoms","order_reverse","d3_voronoi_src_constant","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","Diagram_circles","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","triangles","_found","src_voronoi","voronoi","d3_zoom_src_constant","ZoomEvent","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","zoom","wheeled","dblclicked","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo","__webpack_exports__","game_1","topology","KleinBottle","game","Game","initDisplay","makeGlobal","d3_1","Stone","STONE_CLASSES","[object Object]","None","xPos","yPos","stone","Board","boardElement","xLines","yLines","makeMove","claimTerritory","turn","Black","territoryMode","stoneRadius","intersections","drawGrid","drawHandicapPoints","drawStones","getBoardX","getBoardY","allIntersections","all","col","ints","overlayInts","otherPlayer","White","territories","terries","terry","owner","terryPoints","region","board","console","gameState","blackScore","whiteScore","claimedTerritories","claimedTerritoryLookup","HashSet","Classic","initIntersections","newGameState","amount","running","numPlaced","maxTime","int","placed","moveNum","setTurn","legalMove","capturedNeighbors","getCapturedNeighbors","getCapturedGroup","numCaptured","captured","checkForKo","loadGameState","nextTurn","updateBoard","GameState","copyIntersections","getAllTerritories","drawTerritories","prevGameState","getOtherPlayer","getIntersection","neighbors","getAdjacentNeighbors","capturedGroups","neighbor","visited","newNeighbors","subGroup","includes","territory","getTerritory","updateBoardTerritories","getAllApparentTerritories","exclude","getApparentTerritory","Unknown","greedy","Territory","subTerritory","bScore","wScore","prev","Topology","mod","Torus","xMod","yMod","yFlipped","shouldFlip","flip","RealProjectivePlane","Cylinder","MobiusStrip","hashSet","item","hashKey","content","options","hmr","insertInto","locals","useSourceMap","cssMapping","btoa","sourceMapping","sourceMap","unescape","encodeURIComponent","sourceURLs","sources","sourceRoot","cssWithMappingToString","mediaQuery","alreadyImportedModules","fn","memo","stylesInDom","isOldIE","atob","getElement","styleTarget","HTMLIFrameElement","contentDocument","head","singleton","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","styles","domStyle","refs","parts","addStyle","listToStyles","newStyles","part","css","media","insertStyleElement","lastStyleElementInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","attrs","nonce","nc","getNonce","addAttrs","el","obj","default","styleIndex","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","rel","createLinkElement","autoFixUrls","convertToAbsoluteUrls","oldSrc","href","styleSheet","cssText","createTextNode","newObj","DEBUG","newList","mayRemove","textStore","replaceText","replacement","Boolean","childNodes","baseUrl","protocol","host","currentDir","pathname","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1"],"mappings":"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","file":"bundle.42a9aec7d3e237508b45.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export var name = \"d3\";\nexport var version = \"5.9.1\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"yarn test && rollup -c\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"rimraf\":\"2\",\"rollup\":\"0.64\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"rollup-plugin-terser\":\"1\",\"tape\":\"4\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n","import {hue} from \"./color\";\n\nexport default function(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/.test(value)) value = new Date(value);\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (!isNaN(node.fx)) node.x = node.fx;\n      if (!isNaN(node.fy)) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal() {\n  var index = map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? map.call(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {linearish} from \"./linear\";\nimport {copy, identity, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\nimport {initRange} from \"./init\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\nimport {initRange} from \"./init\";\n\nexport default function() {\n  return initRange.apply(calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect} from \"d3-array\";\nimport {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\n\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n","import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {copy} from \"./sequential\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var peaks = series.map(peak);\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import appearance from \"./appearance\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export {version} from \"./dist/package\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-collection\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-voronoi\";\nexport * from \"d3-zoom\";\n","import { Game, Classic, Torus, KleinBottle } from './game';\nimport './app.css';\n\nwindow.onload = () => {\n    const xLines = 19;\n    const yLines = 19;\n    const topology = new KleinBottle(xLines, yLines);\n    const game = new Game(xLines, yLines, topology);\n\n    game.initDisplay();\n\n    Game.makeGlobal(game);\n    // Game.autoPlacement(game, 1000);\n}\n","// https://www.giacomodebidda.com/how-to-import-d3-plugins-with-webpack/\r\nimport * as d3 from 'd3';\r\nimport { transpose } from 'd3';\r\n\r\nexport type SVGSelection = d3.Selection<SVGSVGElement, {}, HTMLElement, any>;\r\nexport type Selection = d3.Selection<SVGGElement, {}, HTMLElement, any>;\r\n\r\nexport const STONE_CLASSES = [\r\n    \"empty\",\r\n    \"black\",\r\n    \"white\"\r\n];\r\n\r\nexport enum Stone {\r\n    Unknown = -1,\r\n    None = 0,\r\n    Black,\r\n    White\r\n}\r\n\r\nexport class Intersection implements Hashable {\r\n    xPos: number;\r\n    yPos: number;\r\n    stone: Stone;\r\n    constructor(x: number, y: number, s: Stone = Stone.None) {\r\n        this.xPos = x;\r\n        this.yPos = y;\r\n        this.stone = s;\r\n    }\r\n    \r\n    public hashKey(): string {\r\n        return `(${this.xPos},${this.yPos})`;\r\n    }\r\n}\r\n\r\nexport class Board {\r\n    private boardElement: Selection;\r\n    public stoneRadius: number;\r\n    private width: number;\r\n    private height: number;\r\n    private xLines: number = 19;\r\n    private yLines: number = 19;\r\n    private turn: Stone = Stone.Black;\r\n    private territoryMode: boolean = false;\r\n    private makeMove: Function;\r\n    private claimTerritory: Function;\r\n\r\n    constructor(boardElement: Selection, width: number, height: number, xLines: number, yLines: number, makeMove: Function, claimTerritory: Function) {\r\n        this.xLines = xLines;\r\n        this.yLines = yLines;\r\n        this.boardElement = boardElement;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.stoneRadius = Math.min(width / xLines, height / yLines) / 2;\r\n        this.makeMove = makeMove;\r\n        this.claimTerritory = claimTerritory;\r\n    }\r\n\r\n    public setTurn(turn: Stone) {\r\n        this.turn = turn;\r\n    }\r\n\r\n    public draw(intersections: Intersection[][]) {\r\n        this.drawGrid(intersections);\r\n        this.drawHandicapPoints();\r\n\r\n        this.boardElement.append('g').attr('class', 'intersections');\r\n        this.boardElement.append('g').attr('class', 'territories');\r\n        this.boardElement.append('g').attr('class', 'overlay');\r\n\r\n        this.drawStones(intersections);\r\n    }\r\n\r\n    private drawHandicapPoints() {\r\n        if(this.xLines == 19 && this.yLines == 19) {\r\n            const points = [\r\n                [3, 3],\r\n                [9, 3],\r\n                [15, 3],\r\n                [3, 9],\r\n                [9, 9],\r\n                [15, 9],\r\n                [3, 15],\r\n                [9, 15],\r\n                [15, 15],\r\n            ];\r\n\r\n            const dots = this.boardElement.append('g').attr('class', 'dots');\r\n\r\n            dots.selectAll('circle.dot')\r\n                .data(points)\r\n                    .enter()\r\n                    .append('circle')\r\n                        .attr('class', 'dot')\r\n                        .attr('cx', d => this.getBoardX(d[0]))\r\n                        .attr('cy', d => this.getBoardY(d[1]))\r\n                        .attr('r', this.stoneRadius / 6);\r\n        }\r\n    }\r\n\r\n    private drawGrid(intersections: Intersection[][]) {\r\n        const {\r\n            boardElement,\r\n            width,\r\n            height\r\n        } = this;\r\n\r\n        const lines = boardElement.append('g').attr('class', 'lines');\r\n\r\n        lines.append('g').attr('class', 'x-lines')\r\n            .selectAll('line')\r\n            .data(intersections)\r\n                .enter()\r\n                .append('line')\r\n                    .attr('x1', d => this.getBoardX(d[0].xPos))\r\n                    .attr('y1', 0)\r\n                    .attr('x2', d => this.getBoardX(d[0].xPos))\r\n                    .attr('y2', height);\r\n\r\n        lines.append('g').attr('class', 'y-lines')\r\n            .selectAll('line')\r\n            .data(intersections[0])\r\n                .enter()\r\n                .append('line')\r\n                    .attr('x1', 0)\r\n                    .attr('y1', d => this.getBoardY(d.yPos))\r\n                    .attr('x2', width)\r\n                    .attr('y2', d => this.getBoardY(d.yPos));\r\n    }\r\n\r\n    public drawStones(intersections: Intersection[][]) {\r\n        const self = this;\r\n        const {\r\n            boardElement,\r\n            stoneRadius\r\n        } = this;\r\n\r\n        const allIntersections = intersections.reduce((all, col) => all.concat(col));\r\n\r\n        const ints:any = boardElement.select('.intersections')\r\n            .selectAll('.intersection')\r\n            .data(allIntersections);\r\n            \r\n        ints.enter()\r\n            .append('circle')\r\n            .merge(ints)\r\n                .attr('class', d => `intersection stone ${STONE_CLASSES[d.stone]}`)\r\n                .attr('cx', d => this.getBoardX(d.xPos))\r\n                .attr('cy', d => this.getBoardY(d.yPos))\r\n                .attr('r', stoneRadius);\r\n\r\n        const overlay = boardElement.select('g.overlay');\r\n\r\n        const overlayInts = overlay.selectAll('.overlay-int')\r\n            .data(allIntersections)\r\n            .enter()\r\n            .append('g')\r\n                .attr('class', 'overlay-int');\r\n        \r\n        overlayInts.append('rect')\r\n            .attr('class', 'intersection-area')\r\n            .attr('data-xPos', d => d.xPos)\r\n            .attr('data-yPos', d => d.yPos)\r\n            .attr('x', d => this.getBoardX(d.xPos) - stoneRadius)\r\n            .attr('y', d => this.getBoardY(d.yPos) - stoneRadius)\r\n            .attr('width', stoneRadius*2)\r\n            .attr('height', stoneRadius*2);\r\n\r\n        overlayInts.on('mouseover', function(d) {\r\n            if(self.territoryMode && d.stone != Stone.None) {\r\n                const otherPlayer = d.stone == Stone.Black ? Stone.White : Stone.Black;\r\n\r\n                d3.select(this)\r\n                    .append('circle')\r\n                    .attr('class', `highlight stone ${STONE_CLASSES[otherPlayer]}`)\r\n                    .attr('cx', self.getBoardX(d.xPos))\r\n                    .attr('cy', self.getBoardY(d.yPos))\r\n                    .attr('r', stoneRadius/2);\r\n            }\r\n            else if(!self.territoryMode && d.stone == Stone.None) {\r\n                d3.select(this)\r\n                    .append('circle')\r\n                    .attr('class', `highlight stone ${STONE_CLASSES[self.turn]}`)\r\n                    .attr('cx', self.getBoardX(d.xPos))\r\n                    .attr('cy', self.getBoardY(d.yPos))\r\n                    .attr('r', stoneRadius);\r\n            }\r\n        }).on('mouseout', function() {\r\n            d3.select(this)\r\n                .select('circle.highlight')\r\n                .remove();\r\n        }).on('click', function(d) {\r\n            if(self.territoryMode && d.stone != Stone.None) {\r\n                self.claimTerritory(d.xPos, d.yPos);\r\n            }\r\n            else if(!self.territoryMode && d.stone == Stone.None) {\r\n                self.makeMove(d.xPos, d.yPos);\r\n            }\r\n        });\r\n    }\r\n\r\n    public drawTerritories(territories: Territory[]) {\r\n        const {\r\n            boardElement,\r\n            stoneRadius\r\n        } = this;\r\n\r\n        // const allIntersections = intersections.reduce((all, col) => all.concat(col));\r\n\r\n        const terries:any = boardElement.select('.territories')\r\n            .selectAll('.territory')\r\n            .data(territories);\r\n            \r\n        const terry:any = terries.enter()\r\n            .append('g')\r\n            .merge(terries)\r\n                .attr('class', d => `territory ${STONE_CLASSES[d.owner]}`);\r\n\r\n        terries.exit().remove();\r\n\r\n        const terryPoints = terry.selectAll('circle.territory-marker')\r\n            .data(d => d.region);\r\n\r\n        terryPoints.enter()\r\n            .append('circle')\r\n            .merge(terryPoints)\r\n                .attr('class', `territory-marker`)\r\n                .attr('cx', d => this.getBoardX(d.xPos))\r\n                .attr('cy', d => this.getBoardY(d.yPos))\r\n                .attr('r', stoneRadius/2);\r\n\r\n        terryPoints.exit().remove();\r\n    }\r\n\r\n    public printStones(intersections: Intersection[][]) {\r\n        const {\r\n            xLines,\r\n            yLines\r\n        } = this;\r\n\r\n        let board = \"\";\r\n\r\n        for(let y = 0; y < yLines; y++) {\r\n            for(let x = 0; x < xLines; x++) {\r\n                if(intersections[x][y].stone == Stone.Black) {\r\n                    board += \"⚫\";\r\n                }\r\n                else if(intersections[x][y].stone == Stone.White) {\r\n                    board += \"⚪\";\r\n                }\r\n                else {\r\n                    board += \"🞡\";\r\n                }\r\n            }\r\n\r\n            board += \"\\n\";\r\n        }\r\n\r\n        console.log(board);\r\n    }\r\n\r\n    // private drawStone() {\r\n        \r\n    // }\r\n\r\n    private getBoardX(x) {\r\n        return (x + .5) * (this.width / this.xLines);\r\n    }\r\n\r\n    private getBoardY(y) {\r\n        return (y + .5) * (this.height / this.yLines);\r\n    }\r\n}\r\n\r\nexport class Game {\r\n    public board: Board;\r\n    public intersections: Intersection[][];\r\n    private gameState: GameState = null;\r\n    private topology: Topology;\r\n    private svg: SVGSelection;\r\n    private width: number = 500;\r\n    private height: number = 500;\r\n    private xLines: number = 19;\r\n    private yLines: number = 19;\r\n    private turn: Stone = Stone.Black;\r\n    private blackScore: number = 0;\r\n    private whiteScore: number = 0;\r\n    private claimedTerritories: Territory[] = [];\r\n    private claimedTerritoryLookup: HashSet = new HashSet();\r\n\r\n    constructor(xLines: number = 19, yLines: number = 19, topology: Topology = null) {\r\n        this.xLines = xLines;\r\n        this.yLines = yLines;\r\n        this.topology = topology || new Classic(xLines, yLines);\r\n        \r\n        this.intersections = Game.initIntersections(xLines, yLines);\r\n\r\n        this.gameState = this.newGameState();\r\n    }\r\n\r\n    static initIntersections(xLines: number = 19, yLines: number = 19): Intersection[][] {\r\n        let ints = new Array(xLines);\r\n        for(let x = 0; x < xLines; x++) {\r\n            ints[x] = new Array(yLines);\r\n\r\n            for(let y = 0; y < yLines; y++) {\r\n                ints[x][y] = new Intersection(x, y);\r\n            }\r\n        }\r\n\r\n        return ints;\r\n    }\r\n\r\n    static makeGlobal(game: Game) {\r\n        window[\"game\"] = game;\r\n    }\r\n\r\n    // Can be used to place stones randomly for performance testing\r\n    static autoPlacement(game: Game, amount: number) {\r\n        let running = false;\r\n        let numPlaced = 0;\r\n        let maxTime = 0;\r\n\r\n        Game.makeGlobal(game);\r\n\r\n        const int = setInterval(() => {\r\n            if(!running) {\r\n                running = true;\r\n\r\n                const x = ~~(Math.random() * game.xLines);\r\n                const y = ~~(Math.random() * game.yLines);\r\n\r\n                const now = performance.now();\r\n                const placed = game.makeMove(x, y);\r\n                const elapsed = performance.now() - now;\r\n\r\n                if(numPlaced % 50 != 0) {\r\n                    maxTime = Math.max(maxTime, elapsed);\r\n                }\r\n                else {\r\n                    // Reset every 50 moves\r\n                    maxTime = elapsed;\r\n                }\r\n\r\n                if(placed) {\r\n                    console.log(`makeMove(${x},${y})\\t| ${elapsed.toFixed(0)} ms\\t| ${maxTime.toFixed(0)} ms\\t| Move ${game.gameState.moveNum}`);\r\n                }\r\n\r\n                numPlaced++;\r\n\r\n                running = false;\r\n            }\r\n            \r\n            if(numPlaced > amount) {\r\n                clearInterval(int);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    public copyIntersections(): Intersection[][] {\r\n        const {\r\n            xLines,\r\n            yLines,\r\n            intersections\r\n        } = this;\r\n\r\n        let ints = new Array(xLines);\r\n        for(let x = 0; x < xLines; x++) {\r\n            ints[x] = new Array(yLines);\r\n\r\n            for(let y = 0; y < yLines; y++) {\r\n                ints[x][y] = new Intersection(x, y);\r\n                ints[x][y].stone = intersections[x][y].stone\r\n            }\r\n        }\r\n\r\n        return ints;\r\n    }\r\n\r\n    public initDisplay() {\r\n        const {\r\n            width,\r\n            height,\r\n            xLines,\r\n            yLines,\r\n            intersections,\r\n            makeMove,\r\n            claimTerritory\r\n        } = this;\r\n\r\n        const svg = d3.select('#goban').append('svg');\r\n        const boardElement = svg.append('g').attr('class', 'board');\r\n\r\n        this.board = new Board(boardElement, width, height, xLines, yLines, makeMove.bind(this), claimTerritory.bind(this));\r\n\r\n        svg.attr('width', width)\r\n            .attr('height', height);\r\n\r\n        this.svg = svg;\r\n        this.board.draw(intersections);\r\n    }\r\n\r\n    private setTurn(turn: Stone) {\r\n        this.turn = turn;\r\n        this.board.setTurn(turn);\r\n    }\r\n\r\n    private makeMove(xPos: number, yPos: number): boolean {\r\n        const self = this;\r\n        let legalMove = true;\r\n\r\n        if(self.intersections[xPos][yPos].stone != Stone.None) {\r\n            return false;\r\n        }\r\n        \r\n        // Place stone temporarily\r\n        // intersections[xPos][yPos] = new Intersection(xPos, yPos);\r\n        self.intersections[xPos][yPos].stone = self.turn;\r\n\r\n        const capturedNeighbors = self.getCapturedNeighbors(xPos, yPos);\r\n        \r\n        // If this move will capture stones, it is a legal move\r\n        if(capturedNeighbors.length > 0) {\r\n            legalMove = true;\r\n        }\r\n        else {\r\n            const captured = self.getCapturedGroup(self.intersections[xPos][yPos]);\r\n\r\n            // If the placed stone would be captured on placement, it is an illegal move\r\n            legalMove = captured.length == 0;\r\n        }\r\n\r\n        if(legalMove) {\r\n            // Move is legal so far, so continue on.\r\n            let numCaptured = 0;\r\n\r\n            for(let captured of capturedNeighbors) {\r\n                for(let stone of captured) {\r\n                    self.intersections[stone.xPos][stone.yPos].stone = Stone.None;\r\n                    numCaptured++;\r\n                }\r\n            }\r\n\r\n            // In case of Ko, reset the board state\r\n            if(this.checkForKo()) {\r\n                self.loadGameState(self.gameState);\r\n\r\n                return false;\r\n            }\r\n\r\n            if(capturedNeighbors.length > 0) {\r\n                if(self.turn == Stone.Black) {\r\n                    self.blackScore += numCaptured;\r\n                }\r\n                else {\r\n                    self.whiteScore += numCaptured;\r\n                }\r\n            }\r\n\r\n            this.nextTurn();\r\n            return true;\r\n        }\r\n        else {\r\n            // Move is illegal. Remove the stone\r\n            self.intersections[xPos][yPos].stone = Stone.None;\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private nextTurn() {\r\n        if(this.turn === Stone.Black) {\r\n            this.setTurn(Stone.White);\r\n        }\r\n        else {\r\n            this.setTurn(Stone.Black);\r\n        }\r\n\r\n        this.gameState = this.newGameState();\r\n        \r\n        // console.log(`prevGameState\\n${this.gameState.prevGameState.toString()}`);\r\n        // console.log(`gameState\\n${this.gameState.toString()}`);\r\n\r\n        this.updateBoard();\r\n    }\r\n\r\n    private newGameState() {\r\n        return new GameState(this.copyIntersections(), this.turn, this.blackScore, this.whiteScore, this.gameState);\r\n    }\r\n\r\n    private updateBoard() {\r\n        const {\r\n            board,\r\n            intersections\r\n        } = this;\r\n\r\n        board.drawStones(intersections);\r\n        // board.printStones();\r\n    }\r\n\r\n    private updateBoardTerritories() {\r\n        const territories = this.getAllTerritories();\r\n\r\n        this.board.drawTerritories(territories);\r\n    }\r\n\r\n    private loadGameState(state: GameState) {\r\n        const {\r\n            xLines,\r\n            yLines,\r\n            intersections\r\n        } = this;\r\n\r\n        this.setTurn(state.turn);\r\n\r\n        for(let x = 0; x < xLines; x++) {\r\n            for(let y = 0; y < yLines; y++) {\r\n                intersections[x][y].stone = state.intersections[x][y].stone\r\n            }\r\n        }\r\n\r\n        this.gameState = state;\r\n    }\r\n\r\n    private checkForKo(): boolean {\r\n        const {\r\n            xLines,\r\n            yLines,\r\n            intersections,\r\n            gameState: {\r\n                prevGameState\r\n            }\r\n        } = this;\r\n\r\n        if(prevGameState == null) {\r\n            return false;\r\n        }\r\n\r\n        for(let x = 0; x < xLines; x++) {\r\n            for(let y = 0; y < yLines; y++) {\r\n                if(intersections[x][y].stone != prevGameState.intersections[x][y].stone) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private getCapturedNeighbors(xPos, yPos): Intersection[][] {\r\n        const self = this;\r\n        const otherPlayer = self.getOtherPlayer();\r\n        const intersection = self.getIntersection(xPos, yPos)\r\n        const neighbors = self.getAdjacentNeighbors(intersection);\r\n        let capturedGroups: Intersection[][] = [];\r\n\r\n        for(let neighbor of neighbors) {\r\n            if(neighbor && neighbor.stone == otherPlayer) {\r\n                const captured = self.getCapturedGroup(neighbor);\r\n\r\n                if(captured.length > 0) {\r\n                    capturedGroups.push(captured);\r\n                }\r\n            }\r\n        }\r\n\r\n        return capturedGroups;\r\n    }\r\n\r\n    private getCapturedGroup(intersection: Intersection, visited: Intersection[] = []): Intersection[] {\r\n        const self = this;\r\n        const newNeighbors = self.getAdjacentNeighbors(intersection).filter(int => visited.indexOf(int) == -1);\r\n\r\n        // It's important here that \"visited\" is directly modified, so other branches of execution will see the changes\r\n        Array.prototype.push.apply(visited, [intersection, ...newNeighbors]);\r\n\r\n        let captured = true;\r\n        let group = [intersection];\r\n        for(let neighbor of newNeighbors) {\r\n            if(neighbor == null) {\r\n                captured = true;\r\n            }\r\n            else if(neighbor.stone == Stone.None) {\r\n                captured = false;\r\n            }\r\n            else if(neighbor.stone == intersection.stone) {\r\n                const subGroup = self.getCapturedGroup(neighbor, visited);\r\n                captured = captured && subGroup.length > 0;\r\n\r\n                if(captured) {\r\n                    group = [...group, ...subGroup];\r\n                }\r\n            }\r\n\r\n            if(!captured) {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        return group;\r\n    }\r\n\r\n    private claimTerritory(xPos: number, yPos: number, update: boolean = true): boolean {\r\n        const self = this;\r\n        const intersection = self.intersections[xPos][yPos];\r\n\r\n        if(intersection.stone == Stone.None || self.claimedTerritoryLookup.includes(intersection)) {\r\n            return false;\r\n        }\r\n\r\n        const owner = self.getOtherPlayer(self.intersections[xPos][yPos].stone);\r\n        const territory = self.getTerritory(intersection, owner);\r\n\r\n        self.claimedTerritories.push(territory);\r\n\r\n        for(let int of territory.region) {\r\n            self.claimedTerritoryLookup.insert(int);\r\n        }\r\n\r\n        if(update) {\r\n            self.updateBoardTerritories();\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private getAllTerritories(): Territory[] {\r\n        const {\r\n            claimedTerritories,\r\n            claimedTerritoryLookup\r\n        } = this;\r\n\r\n        const apparentTerritories = this.getAllApparentTerritories(claimedTerritoryLookup);\r\n\r\n        return [...claimedTerritories, ...apparentTerritories];\r\n    }\r\n\r\n    private getAllApparentTerritories(exclude: HashSet = new HashSet()): Territory[] {\r\n        const {\r\n            xLines,\r\n            yLines\r\n        } = this;\r\n\r\n        let visited = new HashSet();\r\n        let territories: Territory[] = [];\r\n\r\n        for(let x = 0; x < xLines; x++) {\r\n            for(let y = 0; y < yLines; y++) {\r\n                const int = this.getIntersection(x, y);\r\n\r\n                if(int.stone == Stone.None && !visited.includes(int) && !exclude.includes(int)) {\r\n                    const territory = this.getApparentTerritory(int, visited, true);\r\n\r\n                    if(territory.owner != Stone.Unknown) {\r\n                        territories.push(territory);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return territories;\r\n    }\r\n\r\n    private getApparentTerritory(intersection: Intersection, visited: HashSet = null, greedy: boolean = false, mode: Pointer<Stone> = null): Territory {\r\n        if(intersection.stone != Stone.None) {\r\n            return new Territory(Stone.None, []);\r\n        }\r\n\r\n        if(visited == null) {\r\n            visited = new HashSet();\r\n        }\r\n\r\n        if(mode == null) {\r\n            mode = {\r\n                value: Stone.None\r\n            };\r\n        }\r\n\r\n        const self = this;\r\n        const newNeighbors = self.getAdjacentNeighbors(intersection).filter(int => !visited.includes(int));\r\n\r\n        // It's important here that \"visited\" and \"mode\" are directly modified, so other branches of execution will see the changes\r\n        [intersection, ...newNeighbors].forEach(int => {\r\n            if(int != null && int.stone == Stone.None) {\r\n                visited.insert(int);\r\n            }\r\n        });\r\n\r\n        let territory = new Territory(Stone.None, [intersection]);\r\n        for(let neighbor of newNeighbors) {\r\n            if(neighbor == null) {\r\n                // End of local region\r\n                continue;\r\n            }\r\n\r\n            if(mode.value == Stone.None) {\r\n                // Assign the mode if one hasn't been found\r\n                mode.value = neighbor.stone;\r\n            }\r\n            \r\n            if(neighbor.stone == Stone.None) {\r\n                // Continue checking for more empty space\r\n                const subTerritory = self.getApparentTerritory(neighbor, visited, greedy, mode);\r\n\r\n                if(subTerritory.owner != Stone.Unknown) {\r\n                    territory = territory.merge(subTerritory)\r\n                }\r\n            }\r\n            else if(neighbor.stone == mode.value) {\r\n                // End of local region\r\n                continue;\r\n            }\r\n            else if(neighbor.stone != mode.value) {\r\n                // Neighbor stone doesn't match current mode, so there's no apparent territory here\r\n                mode.value = Stone.Unknown;\r\n            }\r\n\r\n            if(!greedy && mode.value == Stone.Unknown) {\r\n                // If greedy is true, set the mode to unknown, but don't stop filling the rest of the region\r\n                // If greedy is false, break early if the mode becomes unknown\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(mode.value == Stone.Unknown) {\r\n            return new Territory(Stone.Unknown, []);\r\n        }\r\n\r\n        return new Territory(mode.value, territory.region);\r\n    }\r\n\r\n    private getTerritory(intersection: Intersection, mode: Stone, visited: HashSet = null, greedy: boolean = false): Territory {\r\n        if(intersection.stone == mode) {\r\n            return new Territory(Stone.None, []);\r\n        }\r\n\r\n        if(visited == null) {\r\n            visited = new HashSet();\r\n        }\r\n\r\n        const self = this;\r\n        const newNeighbors = self.getAdjacentNeighbors(intersection).filter(int => !visited.includes(int));\r\n\r\n        // It's important here that \"visited\" is directly modified, so other branches of execution will see the changes\r\n        [intersection, ...newNeighbors].forEach(int => {\r\n            if(int != null && int.stone != mode) {\r\n                visited.insert(int);\r\n            }\r\n        });\r\n\r\n        let territory = new Territory(mode, [intersection]);\r\n        for(let neighbor of newNeighbors) {\r\n            if(neighbor == null) {\r\n                // End of local region\r\n                continue;\r\n            }\r\n\r\n            if(neighbor.stone != mode) {\r\n                // Continue checking for more territory\r\n                const subTerritory = self.getTerritory(neighbor, mode, visited, greedy);\r\n\r\n                territory = territory.merge(subTerritory);\r\n            }\r\n            else if(neighbor.stone == mode) {\r\n                // End of local region\r\n                continue;\r\n            }\r\n        }\r\n\r\n        return territory;\r\n    }\r\n\r\n    private getOtherPlayer(turn?: Stone) {\r\n        if(turn == undefined) {\r\n            turn = this.turn;\r\n        }\r\n\r\n        if(turn == Stone.Black) {\r\n            return Stone.White;\r\n        } \r\n        else {\r\n            return Stone.Black;\r\n        }\r\n    }\r\n\r\n    private getAdjacentNeighbors(intersection: Intersection) {\r\n        const {\r\n            xPos,\r\n            yPos\r\n        } = intersection;\r\n\r\n        return [\r\n            this.getIntersection(xPos, yPos-1),\r\n            this.getIntersection(xPos, yPos+1),\r\n            this.getIntersection(xPos-1, yPos),\r\n            this.getIntersection(xPos+1, yPos)\r\n        ];\r\n    }\r\n\r\n    private getIntersection(xPos: number, yPos: number) {\r\n        return this.topology.getIntersection(this.intersections, xPos, yPos);\r\n    }\r\n}\r\n\r\nclass GameState {\r\n    intersections: Intersection[][];\r\n    turn: Stone;\r\n    moveNum: number = 0;\r\n    prevGameState: GameState;\r\n    blackScore: number = 0;\r\n    whiteScore: number = 0;\r\n\r\n    constructor(ints: Intersection[][], t: Stone, bScore: number = 0, wScore: number = 0, prev: GameState = null) {\r\n        this.turn = t;\r\n        this.prevGameState = prev;\r\n        this.intersections = ints;\r\n        this.blackScore = bScore;\r\n        this.whiteScore = wScore;\r\n\r\n        if(prev == null) {\r\n            this.moveNum = 0;\r\n        }\r\n        else {\r\n            this.moveNum = prev.moveNum + 1;\r\n        }\r\n    }\r\n\r\n    public newGameState(intersections: Intersection[][], turn: Stone, bScore: number = 0, wScore: number = 0): GameState {\r\n        return new GameState(intersections, turn, bScore, wScore, this);\r\n    }\r\n\r\n    public toString(): string {\r\n        const transposed = transpose<Intersection>(this.intersections);\r\n        \r\n        return transposed.map(col => {\r\n            return col.map(i => {\r\n                if(i.stone == Stone.Black) {\r\n                    return 'b';\r\n                }\r\n                else if(i.stone == Stone.White) {\r\n                    return 'w';\r\n                }\r\n                else {\r\n                    return '-'\r\n                }\r\n            }).join(' ');\r\n        }).join('\\n');\r\n    }\r\n\r\n    public getState(moveNum: number) {\r\n        let state:GameState = this;\r\n\r\n        while(state.moveNum > moveNum) {\r\n            state = state.prevGameState;\r\n        }\r\n\r\n        return state;\r\n    }\r\n}\r\n\r\nexport class Territory {\r\n    region: Intersection[];\r\n    owner: Stone;\r\n    score: number = 0;\r\n\r\n    constructor(owner: Stone, region?: Intersection[]) {\r\n        this.owner = owner;\r\n\r\n        if(region !== undefined) {\r\n            this.region = region;\r\n            this.score = region.reduce((total, int) => total + (int.stone == Stone.None ? 1 : 2), 0);\r\n        }\r\n    }\r\n\r\n    public merge(territory: Territory): Territory {\r\n        let merged = new Territory(Stone.None);\r\n\r\n        if(this.owner == Stone.None) {\r\n            merged.owner = territory.owner;\r\n        }\r\n        else if(territory.owner == Stone.None) {\r\n            merged.owner = this.owner;\r\n        }\r\n        else if(this.owner != territory.owner) {\r\n            merged.owner = Stone.Unknown;\r\n        }\r\n        else {\r\n            merged.owner = this.owner;\r\n        }\r\n\r\n        merged.region = [...this.region, ...territory.region];\r\n        merged.score = this.score + territory.score;\r\n\r\n        return merged;\r\n    }\r\n}\r\n\r\nexport abstract class Topology {\r\n    protected xLines: number;\r\n    protected yLines: number;\r\n\r\n    constructor(xLines: number, yLines: number) {\r\n        this.xLines = xLines;\r\n        this.yLines = yLines;\r\n    }\r\n\r\n    public abstract getIntersection(intersections: Intersection[][], xPos: number, yPos: number): Intersection;\r\n\r\n    public static mod(n: number, m: number): number {\r\n        // http://mathjs.org/docs/reference/functions/mod.html\r\n        return n - m * Math.floor(n/m);\r\n    }\r\n\r\n    public static shouldFlip(n: number, m: number): boolean {\r\n        return Topology.mod(Math.floor(n/m), 2) == 1;\r\n    }\r\n\r\n    public static flip(n: number, m: number): number {\r\n        return m - n - 1;\r\n    }\r\n}\r\n\r\nexport class Classic extends Topology {\r\n    public getIntersection(intersections: Intersection[][], xPos: number, yPos: number): Intersection {\r\n        if(0 <= xPos && xPos < this.xLines && 0 <= yPos && yPos < this.yLines) {\r\n            return intersections[xPos][yPos];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class Torus extends Topology {\r\n    public getIntersection(intersections: Intersection[][], xPos: number, yPos: number): Intersection {\r\n        const {\r\n            xLines,\r\n            yLines\r\n        } = this;\r\n\r\n        const xMod = Topology.mod(xPos, xLines);\r\n        const yMod = Topology.mod(yPos, yLines);\r\n\r\n        return intersections[xMod][yMod];\r\n    }\r\n}\r\n\r\nexport class KleinBottle extends Topology {\r\n    public getIntersection(intersections: Intersection[][], xPos: number, yPos: number): Intersection {\r\n        const {\r\n            xLines,\r\n            yLines\r\n        } = this;\r\n\r\n        const xMod = Topology.mod(xPos, xLines);\r\n        const yMod = Topology.mod(yPos, yLines);\r\n\r\n        const xFlip = Topology.shouldFlip(xPos, xLines);\r\n        const yFlipped = xFlip ? Topology.flip(yMod, yLines) : yMod;\r\n\r\n        return intersections[xMod][yFlipped];\r\n    }\r\n}\r\n\r\nexport class RealProjectivePlane extends Topology {\r\n    public getIntersection(intersections: Intersection[][], xPos: number, yPos: number): Intersection {\r\n        const {\r\n            xLines,\r\n            yLines\r\n        } = this;\r\n\r\n        const xMod = Topology.mod(xPos, xLines);\r\n        const yMod = Topology.mod(yPos, yLines);\r\n\r\n        const xFlip = Topology.shouldFlip(xPos, xLines);\r\n        const yFlipped = xFlip ? Topology.flip(yMod, yLines) : yMod;\r\n\r\n        const yFlip = Topology.shouldFlip(yPos, yLines);\r\n        const xFlipped = yFlip ? Topology.flip(xMod, xLines) : xMod;\r\n\r\n        return intersections[xFlipped][yFlipped];\r\n    }\r\n}\r\n\r\nexport class Cylinder extends Topology {\r\n    public getIntersection(intersections: Intersection[][], xPos: number, yPos: number): Intersection {\r\n        if(0 <= yPos && yPos < this.yLines) {\r\n            const {\r\n                xLines,\r\n            } = this;\r\n\r\n            const xMod = Topology.mod(xPos, xLines);\r\n\r\n            return intersections[xMod][yPos];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport class MobiusStrip extends Topology {\r\n    public getIntersection(intersections: Intersection[][], xPos: number, yPos: number): Intersection {\r\n        if(0 <= yPos && yPos < this.yLines) {\r\n            const {\r\n                xLines,\r\n                yLines\r\n            } = this;\r\n\r\n            const xMod = Topology.mod(xPos, xLines);\r\n\r\n            const xFlip = Topology.shouldFlip(xPos, xLines);\r\n            const yFlipped = xFlip ? Topology.flip(yPos, yLines) : yPos;\r\n\r\n            return intersections[xMod][yFlipped];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass HashSet {\r\n    // Not exactly a hash set, but it does the job\r\n    private hashSet: {[key: string]: true} = {};\r\n\r\n    public includes(item: Hashable): boolean {\r\n        return item && this.hashSet[item.hashKey()] == true;\r\n    }\r\n\r\n    public insert(item: Hashable) {\r\n        if(item) {\r\n            this.hashSet[item.hashKey()] = true;\r\n        }\r\n    }\r\n}\r\n\r\ninterface Hashable {\r\n    hashKey: () => string;\r\n}\r\n\r\ninterface Pointer<T> {\r\n    value: T;\r\n}","\nvar content = require(\"!!./node_modules/css-loader/dist/cjs.js!./app.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!./node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!./node_modules/css-loader/dist/cjs.js!./app.css\", function() {\n\t\tvar newContent = require(\"!!./node_modules/css-loader/dist/cjs.js!./app.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"./node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"g.lines line {\\n    stroke:black;\\n    shape-rendering: crispEdges;\\n}\\n\\ng.dots circle.dot {\\n    fill: black;\\n    stroke: black;\\n    shape-rendering: crispEdges;\\n}\\n\\n.overlay-int {\\n    stroke: none;\\n    fill: transparent;\\n    z-index: 10;\\n}\\n\\n.highlight {\\n    pointer-events: none;\\n    fill-opacity: 0.5;\\n}\\n\\n.stone.empty {\\n    display: none;\\n}\\n\\n.stone.black, .territory-marker.black {\\n    stroke: black;\\n    stroke-opacity: 0.1;\\n    fill: black;\\n}\\n\\n.stone.white, .territory-marker.white {\\n    stroke: black;\\n    stroke-opacity: 0.1;\\n    fill: seashell;\\n}\\n\\n.territory.black .territory-marker {\\n    stroke: black;\\n    stroke-opacity: 0.1;\\n    fill: black;\\n}\\n\\n.territory.white .territory-marker {\\n    stroke: black;\\n    stroke-opacity: 0.1;\\n    fill: seashell;\\n}\", \"\"]);\n\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return '@media ' + item[2] + '{' + content + '}';\n      } else {\n        return content;\n      }\n    }).join('');\n  }; // import a list of modules into the list\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === 'string') {\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (i = 0; i < modules.length; i++) {\n      var item = modules[i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || '';\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n  return '/*# ' + data + ' */';\n}","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n"],"sourceRoot":""}